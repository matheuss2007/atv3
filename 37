 37- #include <stdio.h> #include <stdlib.h>

#define MAX 100

typedef struct { int front, rear, size; int array[MAX]; } Queue;

void initQueue(Queue *q) { q->front = 0; q->rear = -1; q->size = 0; }

int isEmpty(Queue *q) { return q->size == 0; }

int isFull(Queue *q) { return q->size == MAX; }

void enqueue(Queue *q, int value) { if (isFull(q)) { printf("Fila cheia! Não é possível adicionar o valor %d\n", value); return; } q->rear = (q->rear + 1) % MAX; q->array[q->rear] = value; q->size++; printf("Adicionou %d na fila\n", value); }

int dequeue(Queue *q) { if (isEmpty(q)) { printf("Fila vazia! Não é possível remover um valor\n"); return -1; } int value = q->array[q->front]; q->front = (q->front + 1) % MAX; q->size--; return value; }

int peek(Queue *q) { if (isEmpty(q)) { printf("Fila vazia! Não há valor na frente\n"); return -1; } return q->array[q->front]; }

void printQueue(Queue *q) { if (isEmpty(q)) { printf("Fila vazia!\n"); return; } printf("Elementos na fila: "); for (int i = 0; i < q->size; i++) { printf("%d ", q->array[(q->front + i) % MAX]); } printf("\n"); }

int main() { Queue q; initQueue(&q);

enqueue(&q, 10);
enqueue(&q, 20);
enqueue(&q, 30);

printQueue(&q);

printf("Frente da fila: %d\n", peek(&q));

printf("Removido da fila: %d\n", dequeue(&q));
printf("Removido da fila: %d\n", dequeue(&q));

printQueue(&q);

return 0;
